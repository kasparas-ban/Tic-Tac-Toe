{"version":3,"sources":["TicTacToe.js","App.js","index.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","Square","props","squareClass","winner","value","end","className","onClick","Board","renderSquare","gameEnd","winningSquares","includes","TicTacToe","status","useState","history","Array","fill","stepNumber","xIsNext","state","setState","current","winningLine","moves","map","_","move","jumpTo","step","slice","newSquares","concat","handleClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8110963d.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './TicTacToe-style.css';\n\nconst calculateWinner = (squares) => {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] &&\n      squares[a] === squares[b] &&\n      squares[a] === squares[c]) {\n      return [squares[a], lines[i]];\n    }\n  }\n  return [null, null];\n};\n\nconst Square = (props) => {\n  const squareClass = \"square\" + \n    (props.winner ? \" highlight\" : \"\") + \n    (props.value || props.end ? \" selected\" : \"\");\n  return (\n    <button\n      className={squareClass}\n      onClick={props.onClick}\n    >\n      {props.value ? props.value : \".\"}\n    </button>\n  );\n};\n\nconst Board = (props) => {\n  const renderSquare = i => (\n    <Square\n      end={props.gameEnd}\n      winner={props.winningSquares && props.winningSquares.includes(i)}\n      value={props.squares[i]}\n      onClick={() => props.onClick(i)}\n    />\n  );\n\n  return (\n    <div className=\"board-container\">\n      <div className=\"board-row\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n    </div>\n  );\n};\n\nconst TicTacToe = () => {\n  const [state, setState] = useState({\n    history: [{ squares: Array(9).fill(null) }],\n    stepNumber: 0,\n    xIsNext: true\n  });\n  const history = state.history;\n  const current = history[state.stepNumber];\n  const [winner, winningLine] = calculateWinner(current.squares);\n  let status;\n  let end = false;\n  if (winner) {\n    status = 'Winner is ' + winner;\n    end = true;\n  } else if (!current.squares.includes(null)) {\n    end = true;\n    status = 'Nobody won.'\n  }  else {\n    status = 'Next player: ' + (state.xIsNext ? 'X' : 'O');\n  }\n\n  const moves = history.map((_, move) => {\n    return (\n      <li key={move}>\n        <button\n          className={move === state.stepNumber ? \"history-btn highlight\" : \"history-btn\"}\n          onClick={() => jumpTo(move)}\n        >{move}</button>\n      </li>\n    );\n  });\n\n  const jumpTo = (step) => {\n    setState({\n      history: state.history,\n      stepNumber: step,\n      xIsNext: (step % 2) === 0\n    });\n  };\n\n  const handleClick = i => {\n    const history = state.history.slice(0, state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const newSquares = current.squares.slice();\n    if (calculateWinner(newSquares)[0] || newSquares[i]) {\n      return;\n    }\n    newSquares[i] = state.xIsNext ? 'X' : 'O';\n    setState({\n      history: history.concat(\n        [{ squares: newSquares }]\n      ),\n      stepNumber: history.length,\n      xIsNext: !state.xIsNext\n    });\n  };\n\n  const restart = () => {\n    setState({\n      history: [{ squares: Array(9).fill(null) }],\n      stepNumber: 0,\n      xIsNext: true\n    });\n  };\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"status\">{status}</div>\n      <Board\n        gameEnd={end}\n        winningSquares={winningLine}\n        squares={current.squares}\n        onClick={(i) => handleClick(i)}\n      />\n      <div className=\"game-info\">\n        <div>Steps:</div>\n        <ol>{moves}</ol>\n      </div>\n      <div className=\"bot-panel\">\n        <button className=\"restart\" onClick={restart}>Restart</button>\n      </div>\n    </div>\n  );\n};\n\nexport default TicTacToe;","import TicTacToe from \"./TicTacToe\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TicTacToe />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}